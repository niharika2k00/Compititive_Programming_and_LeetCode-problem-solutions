

                                                                  //     PAIRS     //
                                                              -----------------------------

1)  Initializing Pairs ::

       pair  g1;           //default
       pair  g2(1, 'a');   //initialized,  different data type
       pair  g3(1, 10);    //initialized,  same data type
       pair  g4(g3);       //copy of g3

     a)  pair <int , char> sample;
       sample = make_pair(1, 'a');
       sample = {1, 'a'};


      b) pair<int, char> PAIR1;
          PAIR1.first = 100;   
          PAIR1.second = 'G';

      c) pair<string, double> PAIR2("GeeksForGeeks", 1.23);   


2)    Print Statement ::

         cout << sample.first << " " << sample.second << " " << endl;


  for (auto i = HashMap.begin(); i != HashMap.end(); i++)
       cout << i->first << "  " << i->second << endl;

  for (auto i : HashMap)
        cout << i.first << "  " << i.second << endl;       


 3)  Add elements in an ----
                unordered_map<int , vector<string>> words ;
                hashtable["key"].push_back("value");