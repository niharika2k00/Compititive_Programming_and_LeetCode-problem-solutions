

                                                                 Dynamic  Programming
                                                          __________________________________


    VARIATIONS OF DP ON STRINGS
  --------------------------------

 1) Minimum insertions to form a palindrome  ===>  Len - (LCS)
        : 
        Length of the string - LCS[ longest common subsequence]


 2) Minimum number of insertions/deletion to form a palindrome    https://www.codingninjas.com/codestudio/problems/can-you-make_4244510?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0
        :
        Given : str1 , str2 ;
         x = str1.size() , y = str2.size() ;

        -  perform LCS
        -  Result ->  [(x - LCS) + (y - LCS)]

        Examples :
            str1 = "abcd" , str2 = "anc"
            LCS = 2

            Answer =  [(4 - 2) + (3 - 2)] = 3


 3) Shortest common super sequence (means the sequence that contains both the string)
        :
        [x + y - LCS] 



